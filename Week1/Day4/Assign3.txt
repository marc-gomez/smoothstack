

Unary operators:

negation                  -           -E
increment                 ++          ++E
decrement                 --          --E
logical not               !           !E
address of                &           &E
dereference               *           *E
bitwise not               ~           ~E

Binary operators:

addition                  +           E1 + E2
subtraction               -           E1 - E2
multiplication            *           E1 * E2
division                  /           E1 / E2
modulus                   %           E1 % E2
equal                     ==          E1 == E2
not equal                 !=          E1 != E2
greater than              >           E1 > E2
less than                 <           E1 < E2
greater than or equal     >=          E1 >= E2
less than or equal        <=          E1 <= E2
logical and               &&          E1 && E2
logical or                ||          E1 || E2
logical exclusive or      ^           E1 ^ E2
left bit shift            <<          E1 << E2
right bit shift           >>          E1 >> E2
separator                 ,           E1 , E2
assignment                =           a = E2
addition, assign          +=          a += E2
subtraction, assign       -=          a -= E2
multiplication, assign    *=          a *= E2
division, assign          /=          a /= E2
modulus, assign           %=          a %= E2
left bit shift, assign    <<=         a <<= E2
right bit shift, assign   >>=         a >>= E2
logical and, assign       &=          a &= E2
logical or, assign        |=          a |= E2
logical xor, assign       ^=          a ^= E2

Ternary operators:

conditional               ?:          E1 ? E2 : E3

